import pytest
from cve_searcher import search_by_cve, search_by_keyword

def test_search_by_cve(mocker):
    # Mocking the response from nvdlib
    mock_result = mocker.Mock()
    mock_result.v31severity = 'HIGH'
    mock_result.v31score = 7.5
    mock_result.descriptions = [{'value': 'Heartbleed vulnerability in OpenSSL'}]
    mock_result.v31vector = 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N'
    
    mocker.patch('nvdlib.searchCVE', return_value=[mock_result])
    
    result = search_by_cve('CVE-2014-0160')
    assert result['severity'] == 'HIGH'
    assert result['score'] == 7.5
    assert 'Heartbleed' in result['description']

def test_search_by_keyword(mocker):
    # Mocking the response from nvdlib
    mock_result = mocker.Mock()
    mock_result.id = 'CVE-2014-0160'
    mock_result.v31severity = 'HIGH'
    mock_result.v31score = 7.5
    mock_result.descriptions = [{'value': 'Heartbleed vulnerability in OpenSSL'}]
    mock_result.v31vector = 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N'
    
    mocker.patch('nvdlib.searchCVE', return_value=[mock_result])
    
    results = search_by_keyword('heartbleed')
    assert len(results) == 1
    assert results[0]['cve_id'] == 'CVE-2014-0160'
    assert 'Heartbleed' in results[0]['description']
